<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="userDAO">



<!-- Join.jsp(회원가입 페이지)에서 회원가입 위해 만든 인서트문입니다. -->
<insert id="doJoin" parameterType="UserVO">

	INSERT INTO user_tb (
		user_id
		, user_pw
		, user_name
		, user_address
		, user_address_detail
		, user_resnum_front
		, user_resnum_rear
		, user_gender
		, user_email
		, user_phone
		
	)
	VALUES(
		#{user_id}
		,#{user_pw}
		,#{user_name}
		,#{user_address}
		,#{user_address_detail}
		,#{user_resnum_front}
		,#{user_resnum_rear}
		,#{user_gender}
		,#{user_email}
		,#{user_phone}
	)
</insert>

<!-- Join.jsp(회원가입 페이지)에서 아이디 중복확인을 하기 위해 만든 셀렉트문입니다. -->
<select id="doIdCheck" parameterType="String" resultType="egovMap"><!-- param 직접만든 객체는 다른설정이 없다면 모든 경로를 다 명시 com.sillasys.user.vo.UserVO -->
	SELECT 
		  user_id
	FROM user_tb
	WHERE user_id = #{user_id}
</select>


<!-- Join.jsp(회원가입 페이지)에서 로그인을 하기 위해 만든 셀렉트문입니다. -->
<select id="selectLoginUser" parameterType="UserVO" resultType="egovMap"><!-- param 직접만든 객체는 다른설정이 없다면 모든 경로를 다 명시 com.sillasys.user.vo.UserVO -->
	SELECT 
		  user_id
		, user_pw
		, user_name
		, user_address
		, user_resnum_front
		, user_resnum_rear
		, user_gender
		, user_email
		, user_phone
		, company_name
	FROM user_tb
	WHERE user_id = #{user_id}
	AND	  user_pw = #{user_pw}
</select>


  <select id="coList"  parameterType="String" resultType="egovMap">
      SELECT 
          company_name
          , company_phone
          , company_address
   FROM company_tb
   WHERE company_name LIKE 
   CONCAT('%', #{company_name}, '%')
   </select>

 <!--  <select id="coList"  parameterType="String" resultType="egovMap">
      SELECT 
          company_name
          , company_phone
          , company_address
   FROM company_tb
  </select>
 -->
	<update id="updateCoop" parameterType="UserVO" >
	UPDATE user_tb
	SET company_name = #{company_name}
	WHERE  user_id = #{user_id}
	</update>
	

	<select id="getContract" parameterType="String" resultType="egovMap">
	SELECT
		 c.contract_pk
		, a.company_name
		, c.admin_name
		, c.contract_type
		, c.chk
		FROM contract_tb AS c
		INNER JOIN admin_tb as a
		ON c.admin_id = a.admin_id
		WHERE c.user_id = #{user_id}
	</select>
	
	
	<delete id="delContract" parameterType="contractVO">
	DELETE FROM contract_tb 
	WHERE user_id = #{user_id}
   </delete>
   
   
   <select id="searchType1" parameterType="ContractVO" resultType="egovMap">
	SELECT 
		 company.company_name
		, u.user_name
		, c.contract_type
		, c.start_year
		, c.start_month
		, c.start_day
		, e.end_year
		, e.end_month
		, e.end_day
		, c.work_place
		, c.content
		, w.start_hour
		, w.start_min
		, w.end_hour
		, w.end_min
		, w.b_start_hour
		, w.b_start_min
		, w.b_end_hour
		, w.b_end_min
		, c.work_per_week
		, c.holiday
		, c.pay_type
		, c.pay
		, c.bonus
		, b.benefit_1
		, b.benefit_2
		, b.benefit_3
		, b.benefit_4
		, c.payday
		, c.payfor
		, c.em_insurance
		, c.ac_insurance
		, c.pension
		, c.hlt_insurance
		, c.canvas
		, c.contract_year
		, c.contract_month
		, c.contract_day
		, company.company_phone
		, company.company_address
		, c.admin_name
		, u.user_address
		, u.user_phone
		, u.user_name
	FROM contract_tb AS c
	LEFT OUTER JOIN benefit_tb AS b
	ON b.contract_pk = c.contract_pk
	INNER JOIN  user_tb AS u 
	ON c.user_id = u.user_id
	INNER JOIN  company_tb AS company
	ON u.company_name = company.company_name 
	INNER JOIN end_time_tb AS e
	ON e.contract_pk = c.contract_pk
	INNER JOIN work_time_tb AS w
	ON w.contract_pk = c.contract_pk
	AND c.contract_pk = #{contract_pk}
	</select>
	


</mapper>